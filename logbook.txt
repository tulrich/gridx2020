# Starting from scratch:

# cd to a parent directory
# clone the git repo
git clone https://github.com/tulrich/gridx2020.git

# get deps
npm install # update

# build & run
npm run-script build
npm run-script serve-watch

# push to web
rsync -Pvr dist/ tulrich@...:~/public_html/tulrich/gridx2020/

# Hacks to material-design-lite
pwd
/Users/tulrich/Google Drive/git/energystrategies/node_modules/material-design-lite

gulp && cp dist/material.js dist/material.min.js dist/material.css dist/material.min.css .


# Git cheatsheet

git status  # see what's going on
git add .   # stage modified files for commit
git commit  # commit to local repo

# push changes to github
git fetch origin master
git rebase -i origin/master
git push origin master



Comparison with Sepulveda 2018

Theirs:

  * written by experts, peer reviewed

  * 1 year of hourly data (same)

  * their northern system is similar to (same as?) mine (ISO-NE)

  * their dispatch model is much more sophisticated (minimum ramping
    rates of thermal sources, etc). My contention is this doesn't
    really doesn't matter (physically) because 1) batteries are coming
    and 2) turbines can ramp 0 to 100% in 10-20 minutes. But I should
    add accounting for fuel used for ramping and for spinning & cold
    reserves (and credit batteries where they fill that role).

  * Runs optimization across sweeps of several variables: CO2, tech costs.

  * They're not really modeling "full decarbonization", ascribing zero
    CO2 to low-carbon resources. Results below 50g/KWh (where the
    scenarios diverge) aren't very meaningful, IMO.

  * Models one year. Optimizes. No build time.

Mine:

  * ----> Explicitly models the transition.

  * Newer numbers and modeled learning rates. (E.g. their midrange
    solar/wind/batt price corresponds approx to today's observed
    values.)

